---
version: '3.6'
services:
  elasticP2N:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.name=P2N
      - discovery.seed_hosts=["127.0.0.1", "localhost"]
      - http.cors.enabled=true
      - http.cors.allow-origin=/(null)|(https?:\/\/localhost(:[0-9]+)?)|(https?:\/\/cdn\.rawgit\.com(:[0-9]+)?)/
      - "ES_JAVA_OPTS=-Xms512m -Xmx1g"
    # ulimits:
      # memlock:
        # soft: -1
        # hard: -1
      # nofile:
        # soft: 16384
        # hard: 65536
    ports: ['9200:9200']
    networks: ['p2n']
    volumes:
      - './es_data:/usr/share/elasticsearch/data'
      - './P2N-V3:/home/p2n/P2N-V3'
    deploy:
        resources:
            limits:
              cpus: "0.50"
              memory: 1g
            reservations:
              cpus: "0.25"
              memory: 512M
  kibanaP2N:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kibana
    secrets:
      - source: kibana.yml
        target: /usr/share/kibana/config/kibana.yml
    ports: ['5601:5601']
    networks: ['p2n']
    depends_on: ['elasticP2N']
    deploy:
        resources:
            limits:
              cpus: "0.50"
              memory: 512M
            reservations:
              cpus: "0.25"
              memory: 128M
    # healthcheck:
      # test: curl http://kibanaP2N:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      # interval: 30s
      # timeout: 10s
      # retries: 5
        # change it
      #ELASTICSEARCH_PASSWORD: MonMdp    # change it

  p2n:
    container_name: p2n
    image:  docker.io/dreymond/patent2net:p2n
    volumes:
        - type: bind
          source: ./P2N-V3/DATA
          target: /home/p2n/P2N-V3/DATA
        - type: bind
          source: ./P2N-V3/RequestsSets
          target: /home/p2n/P2N-V3/RequestsSets

    ports:
      - 5000:5000
    stdin_open: true
    tty: true
    environment:
      - LC_ALL=C.utf-8
      - LANG=C.utf-8
      - FLASK_ENV=development
    networks: ['p2n']
    
  carrot2:
    container_name: carrot2
    image: docker.io/dreymond/patent2net:p2n
    ports:
      - 8080:8080
    stdin_open: true
    tty: true
    environment:
      - LC_ALL=C.utf-8
      - LANG=C.utf-8
      - "ES_JAVA_OPTS=-Xms1024M -Xmx4g"
    networks: ['p2n']
# use -p port below to change the local port for dcs. Adapt also ports opening for docker a few lines up!
    command: /home/p2n/carrot2/carrot2-4.2.1/dcs/dcs
    deploy:
        resources:
            limits:
              cpus: "0.85"
              memory: 6g
            reservations:
              cpus: "0.25"
              memory: 256M
networks: {p2n: {}}
  
secrets:
  elasticsearch.yml:
    file: ./config/elasticsearch/elasticsearch.yml
  kibana.yml:
    file: ./config/kibana/kibana.yml

volumes:
    es_data:
        driver: local
        driver_opts:
          o: bind
          type: none
          device: ./es_data

