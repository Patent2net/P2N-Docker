---
version: '3.6'
services:
  elasticP2N:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.name=P2N
      - discovery.seed_hosts=["127.0.0.1", "localhost"]
      - http.cors.enabled=true
      - http.cors.allow-origin=/(null)|(https?:\/\/localhost(:[0-9]+)?)|(https?:\/\/cdn\.rawgit\.com(:[0-9]+)?)/


    ports: ['9200:9200']
    networks: ['p2n']
    volumes:
      - './es_data:/usr/share/elasticsearch/data'

  kibanaP2N:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kibana
    secrets:
      - source: kibana.yml
        target: /usr/share/kibana/config/kibana.yml
    ports: ['5601:5601']
    networks: ['p2n']
    depends_on: ['elasticP2N']

    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://kibanaP2N:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5


  p2n:
    container_name: p2n
    image: p2n-setup
    volumes:
      - ./P2N-V3:/home/p2n/P2N-V3:rw
    ports:
      - 5000:5000
    stdin_open: true
    tty: true
    environment:
      - LC_ALL=C.utf-8
      - LANG=C.utf-8
      - FLASK_ENV=development

networks: {p2n: {}}
  
secrets:
  elasticsearch.yml:
    file: ./config/elasticsearch/elasticsearch.yml
  kibana.yml:
    file: ./config/kibana/kibana.yml

